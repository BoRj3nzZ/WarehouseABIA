/** @file TaskManager.java
 *  @brief Class to create the TaskManager object
 *  @authors
 *  Name          | Surname        | Email                                |
 *  ------------- | -------------- | ------------------------------------ |
 *  Borja	      | Garcia         | borja.garciag@alumni.mondragon.edu   |
 *  @date 10/01/2019
 */

/** @brief package controlador
 */
package controlador;

import java.util.ArrayList;
import java.util.List;

import modelo.Almacen;
import modelo.Articulos;
import modelo.Posicion;
import modelo.Task;
import modelo.Vehiculo;
import modelo.WorkStation;

public class TaskManager extends Thread{
	/**
	 * @brief Attributes
	 */
	Almacen almacen;
	List<Task> listaTasks = new ArrayList<Task>();
	/**
	 * @brief Constructor
	 * @param almacen
	 *            The warehouse
	 */
	public TaskManager(Almacen almacen) {
		this.almacen = almacen;
		listaTasks = almacen.getListaTasks();
	}
	
	/**
	 * @brief Method for getting the workstation which has a unique item inside
	 * @param itemId The item that needs to be found
	 * @return Posicion
	 */
	public Posicion getWorkStationWithItemInside(int itemId){
		Posicion ws = null;
		for(Posicion p : almacen.getListaPosicion()){
			if(p instanceof WorkStation){
				for(Articulos a:((WorkStation) p).getListProductos()){
					if(a.getId()==itemId) ws = p;
				}
			}
		}
		return ws;
	}
	
	/**
	 * @brief Method for starting next available, not started task.
	 */
	public void startNextTask(){
		Vehiculo assignedCar;
		Posicion destination, itemWS;
		Articulos item;
		Task task = listaTasks.get(0);
		item = task.getArticulo();
		destination = task.getPosicionFinal();
		itemWS = getWorkStationWithItemInside(item.getId());
		
		assignedCar = almacen.getAdminCoches().getFirstFreeCar();
		
		almacen.getAdminCoches().setCarData(assignedCar, assignedCar.getActualPosicion(), itemWS, destination, item.getId());
		
	}
	
	//RUN
	
}
