/** @file NormalProcessTest.java
 *  @brief Class to test the normal process of the program
 *  @authors
 *  Name          | Surname        | Email                                |
 *  ------------- | -------------- | ------------------------------------ |
 *  Borja	      | Garcia         | borja.garciag@alumni.mondragon.edu   |
 *  @date 08/01/2018
 *  
 */

/** @brief package processTest
 */
package processTest;

import static org.junit.Assert.assertEquals;

import java.util.List;

/** @brief Libraries
 */
import org.junit.Before;
import org.junit.Test;

import controlador.AdministradorCaminos;
import controlador.AdministradorCoches;
import modelo.Almacen;
import modelo.Order;
import modelo.Posicion;
import modelo.Vehiculo;
import vista.Principal;

/**
* @brief Class NormalProcessTest
*/
public class NormalProcessTest {
	/**
	 * @brief Attributes
	 */
	private Principal principal;
	private Almacen almacen;
	private AdministradorCoches adminCoches;
	private AdministradorCaminos adminCaminos;
	
	/**
	 * @brief Method to create objects
	 */
	@Before
	public void crearAlmacen()
	{
		principal = new Principal();
	}
	
	/**
	 * @brief method that tests the normal procedure of the program
	 */
	@Test
	public void normalProcess() {
		Posicion leaveItemPos, takeItemPos, actualPos;
		int itemId;
		Vehiculo car;
		leaveItemPos = principal.getPositionById(102);
		takeItemPos = principal.getPositionById(103);
		itemId = 1;
		car = principal.getAdminCoches().getFirstFreeCar();
		actualPos = car.getActualPosicion();
		principal.getAdminCoches().setCarData(car, actualPos, takeItemPos, leaveItemPos, itemId);
		int finalPosCar = car.getActualPosicion().getId();
		
	    assertEquals("car is in position 102", 102, (Object)finalPosCar);
	}	
	
	/**
	 * @brief method that tests the normal procedure of the program
	 */
	@Test
	public void viewVehicles() {
		Posicion leaveItemPos, takeItemPos, actualPos;
		int itemId;
		Vehiculo car;
		leaveItemPos = principal.getPositionById(102);
		takeItemPos = principal.getPositionById(103);
		itemId = 1;
		car = principal.getAdminCoches().getFirstFreeCar();
		actualPos = car.getActualPosicion();
		principal.getAdminCoches().setCarData(car, actualPos, takeItemPos, leaveItemPos, itemId);
		int finalPosCar = car.getActualPosicion().getId();
		
	    assertEquals("car is in position 102", 102, (Object)finalPosCar);
	}
	
}
